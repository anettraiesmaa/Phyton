#unsipervised training example (clistering)
#https://scikit-learn.org/dev/api/sklearn.datasets.html

from sklearn.datasets import make_blobs #making syntetic dataset

x, y = make_blobs(n_samples=1000, centers=6, cluster_std=0.80)

x[:, 0] # x-coordinate
x[:, 1] #y Coordinate
y # the cluster of the point

import matplotlib.pyplot as plt
plt.scatter(x[:, 0], x[:, 1], c=y)

import matplotlib.pyplot as plt
plt.scatter(x[:, 0], x[:, 1], c=y)
#train model to seperate blobs into groups
import matplotlib.pyplot as plt
plt.scatter(x[:, 0], x[:, 1], c='grey', edgecolor='black')

from sklearn.cluster import KMeans #model

kmeans = KMeans(n_clusters=2) #initialize the model, seperate to 2 clusters

kmeans.fit(x) #fit model, train model

kmeans.predict(x) #predict, only 1 and 0, bc we chose to train into 2 clusters

cluster_labels = kmeans.predict(x) #predict

import matplotlib.pyplot as plt
plt.scatter(x[:, 0], x[:, 1], c=cluster_labels, edgecolor='black')

#adding cluster centers
kmeans.cluster_centers_[:, 0]
kmeans.cluster_centers_[:, 1]

import matplotlib.pyplot as plt
plt.scatter(x[:, 0], x[:, 1], c=cluster_labels, edgecolor='black')
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s=300, marker='*', c='red')




