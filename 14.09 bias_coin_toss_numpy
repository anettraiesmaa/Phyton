import numpy as np

coint = ["heads", "tails"]

number_of_throws = 10000

throws = np.random.choice(coint, number_of_throws)
throws

np.sum(throws=="heads")
np.sum(throws=="tails")

probapilities = [0.3, 0.7]

throws_with_p = np.random.choice(coint, number_of_throws, p= probapilities)
throws_with_p

print(np.sum(throws_with_p=="heads"))
print(np.sum(throws_with_p=="tails"))

coin_toss_side = ["heads", "tails", "side"]
number_of_throws_2 = 10000
throws_2 = np.random.choice(coin_toss_side, number_of_throws_2)
np.sum(throws=="heads")
np.sum(throws=="tails")
np.sum(throws=="side")
probapilities_2 =  [0.49165, 0.49165, 0.0167]
throws_with_p_2 = np.random.choice(coin_toss_side, number_of_throws_2, p= probapilities_2)
throws_with_p_2
print(np.sum(throws_with_p_2=="heads"))
print(np.sum(throws_with_p_2=="tails"))
print(np.sum(throws_with_p_2=="side"))

unique, counts = np.unique(throws_with_p_2, return_counts=True)
print(counts)
import matplotlib.pyplot as plt
plt.bar(unique, counts)

np.random.randint(1,100)

np.random.randint(1,100, 10)
numbers = np.random.randint(1,101, 100000)
plt.hist(numbers, bins = 10, color= 'skyblue', edgecolor='black', alpha=0.7)
plt.title('Frequency of random integers from [1, 100]')
